---
name: Строки и std::string
theory: |
  Вспомним нашу первую программу:

  ```cpp
  main() {
    std::cout << "Hello, World!";
  }
  ```

  Так что же такое "Hello, world!"? "Hello, world!" представляет собой набор последовательных символов, называемый строкой. В C++ мы используем строки для представления текста, такого как имена, адреса, слова и предложения.

  В этом уроки мы познакомимся со строками в С++

  ### Особенность строк в С++

  Ввиду особенностей языка строки в С++ не являются стандартным типом, на самом деле они являются составным типом и определены в стандартной библиотеке, а не в ядре самого языка. Но строки достаточно просты и полезны, поэтому мы с ними познакомимся здесь, а в уроках про составные типы данных копнем строки глубже.

  Чтобы использовать строки нам надо подключить заголовочный файл `<string>` из стандартной библиотеке:

  ```cpp
  #include <string>

  std::string domain { "code-basics" };
  ```

  Обратите внимание, что тип `string` объявляется через пространство имен `std` и строка в отличие от символа должна быть заключена в двойные кавычки.

  ### Длинна строки

  Если мы хотим знать, сколько символов находится в `std::string`, мы можем спросить переменную `std::string` о ее длине. Синтаксис для этого отличается от того, что вы видели раньше, но он довольно прост:

  ```cpp
  #include <iostream>
  #include <string>

  int main() {
    std::string domain { "code-basics" };
    std::cout << "Length domain name:" << " " << domain.length() << std::endl;
    return 0;
  }
  ```

  Эта программа создает следующий вывод:

  <pre class='hexlet-basics-output'>
    Length domain name: 11
  </pre>

  Обратите внимание, что вместо того, чтобы запрашивать длину строки как `length(domain)`, мы говорим `domain.length()`. Функция `length()` не является обычной автономной функцией – это особый тип функции, которая принадлежит `std::string` и называется функцией-членом. Позже мы расскажем о функциях-членах, в том числе о том, как написать свои собственные.

  У функции `length()` есть алиас `size()` который работает идентично:

  ```cpp
  int main() {
    std::string domain { "code-basics" };
    std::cout << "Length domain name:" << " " << domain.size() << std::endl;
    return 0;
  }
  ```

  <pre class='hexlet-basics-output'>
    Length domain name: 11
  </pre>

  `std::string` сложен и использует многие языковые функции, которые мы еще не рассмотрели. К счастью, вам не нужно разбираться в этих сложностях, чтобы использовать std::string для простых задач, таких как простейший ввод и вывод строк. Мы рекомендуем вам начать экспериментировать со строками прямо сейчас, а дополнительные возможности строк мы рассмотрим позже.

instructions: |
  Допишите программу, которая принимает в качестве аргумента командной строки доменное имя, сохраните его в переменную типа `std::string` и выведите на экран количество символов этого имени. Получить аргумент командной строки можно таким образом - `argv[1]`
tips:
  - |
    [std::string](https://en.cppreference.com/w/cpp/string/basic_string)
