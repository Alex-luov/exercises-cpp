---

name: Структура программы в С++
theory: | 
  Давайте посмотрим на листинг программы из прошлого урока.

  ```cpp
  #include <iostream> 

  int main() {
    std::cout << "Hello Jon Snow!";
    return 0;
  }
  ```

  В верхней части листинга мы видим такую запись:

  ```cpp
  #include <iostream>
  ```

  include это директива препроцессора - с помощью неё мы подключаем заголовочные файлы различных библиотек,
  а также файлы с собственным кодом, то что следует за include в <> это название заголовочного файла библиотеки.
  Здесь мы подключили iostream - библиотека для организации ввода/вывода.
  Далее идет функция main. Так же как театр начинается с вешалки, так и любая программа на С++ начинается с функции main.
  Main - это входная точка(entry point), определение функции начинается с возвращаемого типа, далее идет имя и в скобках список аргументов.
  В примере выше main не принимает параметров, однако есть и другие варианты определения:

  ```cpp
  int main (int argc, char *argv[]) { // принимает аргументы из командной строки
     
  }
  ```

  или такой вариант:

  ```cpp
  int main(array<String^>^ arg) { // из проекта windows form
    Application::EnableVisualStyles();
    Application::SetCompatibleTextRenderingDefault(false);

    ProjectLR33::MyForm form;
    Application::Run(% form);
    return 0;
  }
  ```

  Тело функции обрамлено фигурными скобками, внутри идет набор инструкций, которые выполняет функция, каждая инструкция должна оканчиваться точкой с запятой ;.

instructions: |
  В этом упражнение мы сново потренируемся выводом в консоль, только теперь вы напишите функцию main самостоятельно.
  Не забудьте подключить библиотеку для ввода/вывода.
  Выведете в консоль фразу Hello, Code Basics!
